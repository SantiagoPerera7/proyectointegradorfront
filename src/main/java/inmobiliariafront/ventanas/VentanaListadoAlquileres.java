/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package inmobiliariafront.ventanas;

import com.fasterxml.jackson.databind.ObjectMapper;
import inmobiliaria.controladores.ControladorAlquileres;
import inmobiliaria.vista.VistaListadoAlquileres;
import inmobiliariafront.dto.AlquilerDTO;
import inmobiliariafront.dto.ReciboRequestDTO;
import inmobiliariafront.dto.ClienteDTO;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author santi
 */
public class VentanaListadoAlquileres extends javax.swing.JFrame implements VistaListadoAlquileres{
    private DefaultListModel<String> modeloAlquileres;
     private List<AlquilerDTO> listaAlquileres;
    private final ControladorAlquileres controlador;
    private ClienteDTO propietario;
    /**
     * Creates new form VentanaGenerarPDF
     */
    public VentanaListadoAlquileres(ClienteDTO propietario) {
        initComponents();  
        this.controlador=new ControladorAlquileres(this);
        this.propietario=propietario;
        modeloAlquileres = new DefaultListModel<>();
        listaAlquileres = new ArrayList<>();
        lstAlquileres.setModel(modeloAlquileres);
        cargarAlquileres();
        cargarMeses();
    }
    
   private void cargarMeses(){
       cbMes.removeAllItems();
       cbMes.addItem("Enero");
       cbMes.addItem("Febrero");
       cbMes.addItem("Marzo");
       cbMes.addItem("Abril");
       cbMes.addItem("Mayo");
       cbMes.addItem("Junio");
       cbMes.addItem("Julio");
       cbMes.addItem("Agosto");
       cbMes.addItem("Setiembre");
       cbMes.addItem("Octubre");
       cbMes.addItem("Noviembre");
       cbMes.addItem("Diciembre");
   }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel = new javax.swing.JPanel();
        btnGenerarInforme = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstAlquileres = new javax.swing.JList<>();
        cbMes = new javax.swing.JComboBox<>();
        btnGenerarLiquidacion = new javax.swing.JButton();

        jButton1.setText("jButton1");

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnGenerarInforme.setText("GENERAR RECIBO DE PAGO");
        btnGenerarInforme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarInformeActionPerformed(evt);
            }
        });

        lstAlquileres.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(lstAlquileres);

        cbMes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnGenerarLiquidacion.setText("GENERAR LIQUIDACIÓN MENSUAL");
        btnGenerarLiquidacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarLiquidacionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnGenerarInforme, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbMes, javax.swing.GroupLayout.Alignment.LEADING, 0, 218, Short.MAX_VALUE)
                            .addComponent(btnGenerarLiquidacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLayout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnGenerarInforme, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnGenerarLiquidacion, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGenerarInformeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarInformeActionPerformed

        int selectedIndex = lstAlquileres.getSelectedIndex();
    if (selectedIndex != -1) {
        AlquilerDTO alquilerSeleccionado = listaAlquileres.get(selectedIndex);
        // Crear un JFileChooser para seleccionar archivo
        javax.swing.JFileChooser fileChooser = new javax.swing.JFileChooser();
        fileChooser.setDialogTitle("Guardar Informe PDF");
        fileChooser.setFileSelectionMode(javax.swing.JFileChooser.FILES_ONLY);

        // Sugerir un nombre predeterminado
        fileChooser.setSelectedFile(new java.io.File("informe_alquiler.pdf"));

        // Mostrar el diálogo y capturar la respuesta
        int userSelection = fileChooser.showSaveDialog(this);
        
        if (userSelection == javax.swing.JFileChooser.APPROVE_OPTION) {
            // Obtener el archivo seleccionado
            java.io.File selectedFile = fileChooser.getSelectedFile();
            String rutaArchivo = selectedFile.getAbsolutePath();

            // Validar la extensión del archivo
            if (!rutaArchivo.toLowerCase().endsWith(".pdf")) {
                rutaArchivo += ".pdf";
            }
            ReciboRequestDTO datosPDF;
            try {
                datosPDF = new ReciboRequestDTO(alquilerSeleccionado.getId(),rutaArchivo,(String)cbMes.getSelectedItem());
                controlador.generarPDF(datosPDF);
                JOptionPane.showMessageDialog(this, "PDF Generado correctamente");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Error al generar PDF: "+ex.getMessage());
            }
        } else {
            //System.out.println("Guardado cancelado por el usuario.");
        }
    } else {
        JOptionPane.showMessageDialog(this, "Por favor seleccione un alquiler de la lista");
    }
    }//GEN-LAST:event_btnGenerarInformeActionPerformed

    private void btnGenerarLiquidacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarLiquidacionActionPerformed
        int selectedIndex = lstAlquileres.getSelectedIndex();
        if (selectedIndex != -1) {
            AlquilerDTO alquilerSeleccionado = listaAlquileres.get(selectedIndex);
            VentanaInformeLiquidacionMensual ventanaInforme = new VentanaInformeLiquidacionMensual(alquilerSeleccionado.getId(),cbMes.getSelectedItem().toString());
            ventanaInforme.setVisible(true);
        }
        else {
            JOptionPane.showMessageDialog(this, "Por favor seleccione un alquiler de la lista");
        }
    }//GEN-LAST:event_btnGenerarLiquidacionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaListadoAlquileres.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaListadoAlquileres.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaListadoAlquileres.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaListadoAlquileres.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ClienteDTO propietario = new ClienteDTO("Nombre", "Apellido", "Dirección");
                new VentanaListadoAlquileres(propietario).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerarInforme;
    private javax.swing.JButton btnGenerarLiquidacion;
    private javax.swing.JComboBox<String> cbMes;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> lstAlquileres;
    // End of variables declaration//GEN-END:variables

    @Override
    public void cargarAlquileres() {
        modeloAlquileres.clear();// Actualiza la lista interna
        for (AlquilerDTO alquiler : propietario.getAlquileres()) {
            modeloAlquileres.addElement(alquiler.toString());
            listaAlquileres.add(alquiler);
        }
    }
}
